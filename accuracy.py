
from sklearn.metrics import precision_score, recall_score, classification_report,accuracy_score, f1_score, confusion_matrix
from Capture import Capture, normal, training
from IOview import InputView, OutputView, ModelView
from DomainLevel import DomainLevel
import numpy as np
import pandas as pd


capture = training
modelv = ModelView.load(DomainLevel.SIDE)

inputv = InputView(capture, DomainLevel.SIDE)

outputv = OutputView(inputv, modelv)

prediction = outputv._prediction
df = pd.DataFrame(data={'dn': inputv.dn, 'prediction': prediction['prediction']})
df = df.set_index('dn')

if False:
    df = df.drop_duplicates()

predictions = df['prediction'].to_numpy()


y_result = [0 if p < 0.5 else 1 for p in predictions]

label = capture.label
if label is not None:
    y_test = [0 if l == 'legit' else 1 for l in label]
else:
    y_test = np.asarray([float(0) for p in predictions])
    


score = f1_score(y_test, y_result, average="macro")
precision = precision_score(y_test, y_result, average="macro")
recall = recall_score(y_test, y_result, average="macro")
report = classification_report(y_test, y_result,digits=4)
acc= accuracy_score(y_test, y_result)
c_matrix = confusion_matrix(y_test, y_result)
print('\n clasification report:\n', report)
print('F1 score:', score)
print('Recall:', recall)
print('Precision:', precision)
print('Accuracy:', acc)
print('Confusion martix:', c_matrix)