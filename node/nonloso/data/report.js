
var sqlite3 = require('sqlite3').verbose();
var sqlite = require('sqlite');
const Model = require('./model');

class Report{
    id;
    date;
    model;
    input_dataset_path;
    test_dataset_path;
    accuracy;
    true_positive;
    time_elapsed;
    metrics = {};
    class_accuracies = {};

    constructor(id) {
        this.id = Number.parseInt(id);
        if(this.id < 0) throw "Invalid id"
    }

    static async fetch(id) {
        let report = new Report(id);

        const db = await sqlite.open({
            filename: '/home/princio/Desktop/malware_detection/models/database.sqlite3',
            driver: sqlite3.Database
        })

        const report_db = await db.get("SELECT * FROM reports AS r WHERE r.id=$id", { $id: Number.parseInt(id)})

        report.id = id;
        report.date = new Date(report_db.datetime);
        report.model = report_db.model_id;
        report.input_dataset_path = report_db.input_dataset_path;
        report.test_dataset_path = report_db.test_dataset_path;
        report.accuracy = report_db.accuracy;
        report.true_positive = report_db.true_positive.readInt32LE(0);
        report.time_elapsed = report_db.time_elapsed;

        const metrics = await db.all("SELECT * FROM metrics AS m WHERE m.report_id=$id", { $id: report.id});

        metrics.forEach((metric) => {
            report.metrics[metric.name] = {
                "precision": metric.precision,
                "recall": metric.recall,
                "f1_score": metric.f1_score,
                "support": metric.support
            };
        });

        const class_accuracies = await db.all("SELECT * FROM class_accuracy AS c WHERE c.report_id=$id", { $id: report.id});

        for(const class_acc of class_accuracies)
            report.class_accuracies[class_acc.class_name] = class_acc.value;

        return report;
    }
}

module.exports = Report;