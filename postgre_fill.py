import psycopg2
import pandas as pd
from model import Model
from publicsuffixlist import PublicSuffixList
from publicsuffix2 import get_public_suffix, get_sld

psl = PublicSuffixList()


models = [Model.load('nosfx'), Model.load('domain')]



db = psycopg2.connect("host=localhost dbname=dns user=postgres password=postgres")
cur = db.cursor()

cur.execute(
    """SELECT id, dn, bdn, nosfx, domain, top10m FROM dn WHERE suffix is distinct from '-ukw-';"""
)
dns = cur.fetchall()
df = pd.DataFrame(dns, columns=['id', 'dn', 'bdn', 'nosfx', 'domain', 'top10m'])
df['suffix'] = df.dn.apply(psl.publicsuffix,  accept_unknown=False)

ids = []
for idx, row in df[df.suffix.isnull()][['id', 'suffix']].iterrows():
    ids.append([row['id']])

cur.executemany("""UPDATE dn SET nosfx=0, domain=0, suffix='-ukw-' WHERE id = %s::integer;""", ids)
db.commit()


cur.execute(
    """SELECT id, dn, bdn, nosfx, domain, top10m FROM dn WHERE suffix is distinct from '-ukw-' and (nosfx is NULL or domain is NULL);"""
)
dns = cur.fetchall()

if len(dns) == 0:
    print('No row to update for nn.')
else:
    df = pd.DataFrame(dns, columns=['id', 'dn', 'bdn', 'nosfx', 'domain', 'top10m'])
    df['suffix'] = df.dn.apply(psl.publicsuffix,  accept_unknown=False)


    def domain(x):
        bdn = x[0]
        suffix = x[1]
        if suffix is None:
            raise Exception('something went wrong: <%s> <%s>' % (bdn, suffix))
        return bdn[:-1-len(suffix)]

    def nosfx(x):
        dn = x[0]
        suffix = x[1]
        if suffix is None:
            raise Exception('something went wrong: <%s> <%s>' % (dn, suffix))
        return dn[:-1-len(suffix)]

    df['domain_x'] = df[['bdn', 'suffix']].apply(domain, axis=1)
    df['nosfx_x']  = df[['dn',  'suffix']].apply(nosfx,  axis=1)

    for model in models:
        model.load_model()
        
    for model in models:
        df[model.name] = model.predict_raw(df[model.name + '_x'])

    cur.executemany("""UPDATE dn SET nosfx=%s, domain=%s, suffix=%s WHERE id = %s::integer;""", df[['nosfx', 'domain', 'suffix', 'id']].values)

    db.commit()



cur.execute(
    """SELECT id, bdn FROM dn WHERE top10m is null;"""
)
dns = cur.fetchall()
df = pd.DataFrame(dns, columns=['id', 'bdn'])

df_10m = pd.read_csv('top_10m.csv').set_index('bdn').to_dict(orient='index')

df['top10m'] = df.bdn.apply(lambda x: df_10m[x]['rank'] if x in df_10m else None)

print(df[df.top10m.notnull()])

cur.executemany("""UPDATE dn SET top10m=%s WHERE id = %s::integer;""", df[['top10m', 'id']][df.top10m.notnull()].values)

db.commit()
