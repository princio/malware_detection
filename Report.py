from datetime import datetime
from sklearn.metrics import confusion_matrix
from Dataset import Dataset
from Model import Model

class Report:
    def __init__(self, datetime_ = None):
        self.id = None
        self.model = None
        self.dataset = None
        self.datetime = datetime.now() if datetime_ is None else datetime_
        self.confusion_matrix = None
        self.labels = None

    @staticmethod
    def fetch(connection, id):
        cursor = connection.cursor()
        cursor.execute("""SELECT id, model_id, dataset_id, datetime, time_elapsed, confusion_matrix, labels
	                        FROM public.reports WHERE id=%s;""", (id, ))
                            
        fetched = list(cursor.fetchone())
        report = Report()
        report.id = fetched.pop(0)
        report.model = Model.fetch(connection, fetched.pop(0))
        report.dataset = Dataset.fetch(connection, fetched.pop(0))
        report.datetime = fetched.pop(0)
        report.time_elapsed = fetched.pop(0)
        report.confusion_matrix = fetched.pop(0)
        report.labels = fetched.pop(0)

        return report

    def save(self, connection):
        cursor = connection.cursor()
        cursor.execute("""INSERT INTO public.reports
                        (model_id, dataset_id, datetime, time_elapsed, confusion_matrix, labels)
                        VALUES ( ?, ?, ?, ?, ?, ?, ?);""",
                        (self.model.id, self.dataset.id, self.datetime, self.confusion_matrix, self.labels))
        connection.commit()

    def __str__(self):
        return ("model: %s\ndataset: %s\n[ %6d, %6d ]\n[ %6d, %6d ]\n" % (self.model, self.dataset, self.confusion_matrix[3], self.confusion_matrix[2], self.confusion_matrix[1], self.confusion_matrix[0]))