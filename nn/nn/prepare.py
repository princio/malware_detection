import pandas as pd
import sys
import json
from pslregex import PSLdict


with open('dicter.all.json', 'r') as f:
    dicterall = json.load(f)

def get_suffix(dn):
    ds = []
    idn = '.'.join(dn.split('.')[::-1])
    d = dicterall[idn[0]]
    labels = idn.split('.')

    for i, l in enumerate(labels):
        try:
            d = d[l]
            if '' in d:
                k = d['']
                k['dn-suffix'] = '.'.join(labels[l::-1])
                ds.append(k)
            elif '@code' in d:
                k = d
                k['dn-suffix'] = '.'.join(labels[l::-1])
                ds.append(k)
                break
        except KeyError as e:
            if len(labels)-1 > i and '*' in d:
                k = d['*']
                k['dn-suffix'] = '.'.join(labels[l::-1])
                ds.append(k)
            break

    return [ { 'suffix': d['@suffix'], 'section': d['@section'], 'dn-suffix': ds } ]


if __name__ == "__main__":

    ds_path = sys.argv[1]

    ds = pd.read_csv(ds_path)
    
    psldict = PSLdict()
    
    psldict.init(download=False, update=False)
    
    sfx = [ psldict.match(dn) for dn in ds.dn.values ]
    
    ds['icann'] = [ s['icann']['dn-suffix'] if s['icann'] is not None and 'dn-suffix' in s['icann'] else None for s in sfx if s is not None ]
    
    ds['private'] = [ s['private']['dn-suffix'] if s['private'] is not None and 'dn-suffix' in s['private'] else None for s in sfx if s is not None ]
    
    ds['X'] = ds.dn.where(~ds['icann'].isna(), ds['dn'][ds['icann'].isna()], axis=0)

    pass