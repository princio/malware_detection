import psycopg2
import os, json
from Model import Model
from Metrics import Metrics
from Repository import DatasetRepository, ModelRepository

connection = psycopg2.connect(user = "postgres",
                                  password = "porcodio",
                                  host = "127.0.0.1",
                                  port = "5432",
                                  database = "malware")




def model_de():
    cursor = connection.cursor()
    cursor.execute(Model.SELECT)
    rows = cursor.fetchall()
    for row in rows:
        model = Model.fill(connection, row)
        if os.path.exists(f"{model.path}.csv") == False and os.path.exists(f"{model.path}.json") == False:
            print("%s: %s  %s" % (model.path, os.path.exists(f"{model.path}.json"), os.path.exists(f"{model.path}.h5")))
            ModelRepository.delete(connection, model)

def model_accuracy():
    cursor = connection.cursor()
    cursor.execute(Model.SELECT + "WHERE dataset_train IS NOT NULL")
    rows = cursor.fetchall()
    models = []
    for row in rows:
        models.append(Model.fill(connection, row))

    dataset = DatasetRepository.fetchone(connection, 'cbfd6708-f62b-4a0d-897f-9a94c393f6b1')

    with open('output/model_acc_dataset_1_with_time.csv', 'w') as fp:
        for model in models:
            print("%s: %s  %s" % (model.path, os.path.exists(f"{model.path}.json"), os.path.exists(f"{model.path}.h5")))
            model.load_model()

            confusion_matrix_, _time_elapsed = model.test(dataset)

            metrics = Metrics.create(labels=dataset.labels, confusion_matrix=confusion_matrix_, dga=dataset.dga)

            fp.write("%s,%s,%f, %f\n" % (model.id, model.path, metrics.accuracy, _time_elapsed))




if __name__ == "__main__":

    model_accuracy()

    pass