import pyshark
import time
import subprocess
import threading
import os
import pandas as pd

def sizeth(file):
    while True:
        if os.path.exists(file):
            print('Size', os.stat(file).st_size)
        time.sleep(5)
    

if __name__ == '__main__':

    df = pd.read_csv('./wireshark_fields.csv')

    print(df['dns.aaaa'].drop_duplicates())


    exit(1)






    file ='/tmp/test/7_2013-08-20_capture-win1.pcap'

    if os.path.exists(file +  '.dns.progress'):
        os.remove(file +  '.dns.progress')

    # th = threading.Thread(target=sizeth, args=(file + '.dns.progress',)) 
    # th.start()

    
    pkt_max_size_mb = 10

    splitter = ['tcpdump', '-r', file, '-w', file+'.out', '-C', '25']
    subprocess.run(splitter, capture_output=True)
    
    i=0
    while True:
        time_pyshark = time.time()
        cmd = ['tshark', '-B', '10240', '-r', file, '-Y', 'dns && !_ws.malformed && !icmp', '-w', f'{file}.dns.part_{i}.progress']
        subp = subprocess.run(cmd, capture_output=True)
        print(subp.stderr)
        print(subp.stdout)
        print('Pyshark time:', time.time() - time_pyshark)
        i += 1
    th._stop()

    # pyshark_ctr = 0
    # tshark_cap = pyshark.FileCapture(file_, only_summaries=True, keep_packets=False, display_filter="dns && !_ws.malformed && !icmp")
    # try:
    #     while True:
    #         packet = tshark_cap.next()
    #         pyshark_ctr+=1
    # except (StopIteration, pyshark.capture.capture.TSharkCrashException):
    #     tshark_cap.close()
    #     pass
    # print('Pyshark time:', time.time() - time_pyshark)
    # print('Pyshark ctr :', pyshark_ctr)

    # extraction = pcapkit.extract(fin=file_, nofile=True, auto=True)