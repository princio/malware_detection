#!/bin/bash

dns_s=()
csv_s=()
list_s=()
req_list_s=()
for pcap_path in $(ls /media/princio/ssd512/pcap/*.pcap);
do
       pcap=$(basename "$pcap_path")
	wo_ext="${pcap:0:${#pcap}-5}"
	
       out=''
       ext='dns.pcap'
       path="/media/princio/ssd512/$ext/$wo_ext"
       if [ -e "$path.$ext.progress" ]; then
              out="$out\t> removing progress $ext file.\n"
              rm "$path.$ext.progress"
       fi
       if [ ! -e "$path.$ext" ] && [ ! -e "$path.err.$ext" ]; then
              out="$out\t> added to $ext tail.\n"
              dns_s+=($wo_ext)
       fi

       ext='dns.csv'
       path="/media/princio/ssd512/$ext/$wo_ext"
       if [ -e "$path.$ext.progress" ]; then
              out="$out\t> removing progress $ext file.\n"
              rm "$path.$ext.progress"
       fi
       if [ ! -e "$path.$ext" ] && [ ! -e "$path.err.$ext" ]; then
              out="$out\t> added to $ext tail.\n"
              csv_s+=($wo_ext)
       fi

       ext='dns.list'
       path="/media/princio/ssd512/$ext/$wo_ext"
       if [ -e "$path.$ext.progress" ]; then
              out="$out\t> removing progress $ext file.\n"
              rm "$path.$ext.progress"
       fi
       if [ ! -e "$path.$ext" ] && [ ! -e "$path.err.$ext" ]; then
              out="$out\t> added to $ext tail.\n"
              list_s+=($wo_ext)
       fi

       ext='dns.req.list'
       path="/media/princio/ssd512/$ext/$wo_ext"
       if [ -e "$path.$ext.progress" ]; then
              out="$out\t> removing progress $ext file.\n"
              rm "$path.$ext.progress"
       fi
       if [ ! -e "$path.$ext" ] && [ ! -e "$path.err.$ext" ]; then
              out="$out\t> added to $ext tail.\n"
              req_list_s+=($wo_ext)
       fi


       if [ ! -z "$out" ]; then
              echo "$pcap:"
              printf "$out"
       fi
done

echo "Would you continue? [Y/n]"
read -p "Are you sure? " -n 1 -r
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    echo "Aborted..."
    exit 0
fi

for dns in ${dns_s[@]}; do
       in_path="/media/princio/ssd512/pcap/$dns.pcap"
       out_path="/media/princio/ssd512/dns.pcap/$dns.dns.pcap"
       err_path="/media/princio/ssd512/dns.pcap/$dns.err.dns.pcap"
       echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
       filesize=$(stat --printf="%s" $in_path)
       echo "DNS filtering  <$dns> (size: $filesize byte)..."
       tshark -r "$in_path"\
              -Y 'dns && !_ws.malformed && !icmp' \
              -w "$out_path.progress"
       if [ $? = 0 ]; then
              mv "$out_path.progress" "$out_path"
       else
              mv "$out_path.progress" "$err_path"
       fi
done

for csv in ${csv_s[@]}; do
       in_path="/media/princio/ssd512/dns.pcap/$csv.dns.pcap"
       if [ ! -e $in_path ]; then
              in_path="/media/princio/ssd512/dns.pcap/$csv.err.dns.pcap"
       fi
       out_path="/media/princio/ssd512/dns.csv/$csv.dns.csv"
       err_path="/media/princio/ssd512/dns.pcap/$dns.err.dns.csv"
       echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
       echo "CSV generating  <$csv>..."
       tshark -r "$in_path" \
              -Y 'dns && !_ws.malformed && !icmp'              \
              -T fields -e frame.number -e frame.time_epoch    \
              -e ip.src -e ip.dst -e dns.qry.name              \
              -e dns.flags.response -e dns.qry.type -e dns.a   \
              -E separator=, \
              > "$out_path.progress"
       if [ $? = 0 ]; then
              mv "$out_path.progress" "$out_path"
       else
              mv "$out_path.progress" "$err_path"
       fi
done

for list in ${list_s[@]}; do
       in_path="/media/princio/ssd512/dns.csv/$list.dns.csv"
       if [ ! -e $in_path ]; then
              in_path="/media/princio/ssd512/dns.csv/$list.err.dns.csv"
       fi
       out_path="/media/princio/ssd512/dns.list/$list.dns.list"
       err_path="/media/princio/ssd512/dns.csv/$dns.err.dns.list"
       echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
       echo "Awking  <files/$list.csv>:"
       awk -F "\"*,\"*" '{print $5}' "$in_path" > "$out_path.progress"
       if [ $? = 0 ]; then
              mv "$out_path.progress" "$out_path"
       else
              mv "$out_path.progress" "$err_path"
       fi
done

for req_list in ${req_list_s[@]}; do
       in_path="/media/princio/ssd512/dns.csv/$req_list.dns.csv"
       if [ ! -e $in_path ]; then
              in_path="/media/princio/ssd512/dns.csv/$req_list.err.dns.csv"
       fi
       out_path="/media/princio/ssd512/dns.req.list/$req_list.dns.list"
       err_path="/media/princio/ssd512/dns.csv/$dns.err.dns.list"
       echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
       echo "Awking req <files/$req_list.csv>:"
       awk -F "\"*,\"*" '$6 == 1 {print $5}' "$in_path" > "$out_path.progress"
       if [ $? = 0 ]; then
              mv "$out_path.progress" "$out_path"
       else
              mv "$out_path.progress" "$err_path"
       fi
done

exit 0
