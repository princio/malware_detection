from Model import Model
import pandas as pd
from DomainLevel import Transformer
import os, math

REQ_ROOT_DIR='/media/princio/ssd512/dns.req.list/'
YREQ_ROOT_DIR='/media/princio/ssd512/y.req.csv/'

models = [ Model.load(-3), Model.load(1), Model.load(4)]

files = []
DNs_lists = []
DNs = []
for walker in os.walk(REQ_ROOT_DIR):
    for filename in walker[2]:
        try:
            DNs.append(filename[:-9])
        except pd.errors.EmptyDataError:
            files.append({'name': filename[:-9], 'total': 0, 'uniques': 0})


def model_predict(model, name, dns, tr = None):
    if tr is None:
        tr = model.tr
    X = [tr.translator()(dn) for dn in dns]
    y, _, _ = model.predict(X)
    return pd.Series(y)


errors = []
df_Ys = {}
for num, name in enumerate(DNs):
    if os.path.exists(os.path.join(YREQ_ROOT_DIR, f'{name}.y.csv')):
        # print('%5d/%d %s--skipped' % (num, len(DNs), name))
        continue
    try:
        df_DN = pd.read_csv(os.path.join(REQ_ROOT_DIR, f'{name}.dns.list'), names=['DN'])
        print('%5d/%d %s' % (num, len(DNs), name))

        df_DN_unique = df_DN['DN'].drop_duplicates().to_frame()
        for model in models:
            series_y = model_predict(model, name, df_DN_unique['DN'].values)
            df_y = series_y.copy().to_frame().set_index(df_DN_unique['DN']).rename(columns={0: model.name})
            df_y.index.rename('DN', inplace=True)
            df_DN = df_DN.join(df_y, on=['DN'])
        
        print('done.\n')
        df_DN.to_csv(os.path.join(YREQ_ROOT_DIR, f'{name}.y.csv'))
        df_Ys[name] = df_DN
    except Exception as e:
        print(f'error with {name}: {e}')
        errors.append(f'error with {name}: {e}')

with open('/tmp/errors.txt', 'w') as fp:
    fp.writelines(errors)



#71/418 12_2013-10-17_capture-win10-from-2013-10-17-to-2013-10-18