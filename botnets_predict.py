from Model import Model
import pandas as pd
from DomainLevel import Transformer
import os, math

REQ_ROOT_DIR='/media/princio/ssd512/dns.req.list/'
YREQ_ROOT_DIR='/media/princio/ssd512/y.req.csv/'

models = [ Model.load(-3), Model.load(1), Model.load(4)]

files = []
DNs_lists = []
DNs = []
for walker in os.walk(REQ_ROOT_DIR):
    for filename in walker[2]:
        try:
            DNs.append(filename[:-9])
        except pd.errors.EmptyDataError:
            files.append({'name': filename[:-9], 'total': 0, 'uniques': 0})


errors = []
for num, name in enumerate(DNs):
    if os.path.exists(os.path.join(YREQ_ROOT_DIR, f'{name}.y.csv')):
        # print('%5d/%d %s--skipped' % (num, len(DNs), name))
        continue
    df_DN = pd.read_csv(os.path.join(REQ_ROOT_DIR, f'{name}.dns.list'), names=['DN'])
    if df_DN.shape[0] == 0:
        print('%5d/%d %s--EMPTY' % (num, len(DNs), name))
        continue
    # try:
    if True:
        print('%5d/%d %50s%20d' % (num, len(DNs), name, df_DN.shape[0]))
        for model in models:
            DNs = df_DN['DN'].apply(model.tr.translator())
            df_DN[model.name], _ = model.predict_u(DNs)
        
        print('done.\n')

        df_DN.to_csv(os.path.join(YREQ_ROOT_DIR, f'{name}.y.csv'))
    # except Exception as e:
    #     print(f'error with {name}: {e}', e)
    #     errors.append(f'error with {name}: {e}')

with open('/tmp/errors.txt', 'w') as fp:
    fp.writelines(errors)


#71/418 12_2013-10-17_capture-win10-from-2013-10-17-to-2013-10-18