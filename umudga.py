import pandas as pd
from Extractor import Extractor
import os, math
import numpy as np
from Model import Model

UMUDGA_DIR='/media/princio/ssd512/UMUDGA/lists/'
Y_UMUDGA_DIR='/media/princio/ssd512/UMUDGA/y/'

csv_list = []
for walker in os.walk(UMUDGA_DIR):
    dir_ = walker[0]
    if dir_.rfind('/list') == len(dir_) - 5:
        name = dir_.replace(UMUDGA_DIR, '').replace('/list', '')
        lists = [ int(list_.replace('.txt', '')) for list_ in walker[2] ]
        lists.sort()
        csv_list.append({ 'name': name, 'sizes': lists, 'path': f'{walker[0]}/{lists[-1]}.txt' })

models = [ Model.load('nosfx'), Model.load('last')]


errors = []
for num, files in enumerate(csv_list):
    filename = files['path']
    df = pd.read_csv(filename, names=['DN'])

    try:
        print('%5d/%d %50s%20d' % (num, len(files), filename, df.shape[0]))

        print('checking domains...')
        DNs = df['DN'].copy()
        DNs_correct = DNs.apply(Extractor.is_dn)
        DNs = DNs[DNs_correct == 1]

        print(f'found {df["DN"].shape[0] - DNs.shape[0]} wrong domains.')

        print('predicting %d dn...' % DNs.shape[0])
        
        for model in models:
            df[model.name], _ = model.predict_u(DNs)

        if not os.path.exists(os.path.join(Y_UMUDGA_DIR, files['name'])):
            os.makedirs(os.path.join(Y_UMUDGA_DIR, files['name']))
            
        df.to_csv(os.path.join(Y_UMUDGA_DIR, files['name'], f'{files["sizes"][-1]}.txt'), index=False)
        
        print('done')
    except Exception as e:
        print(f'error with {filename}: {e}', e)
        errors.append(f'error with {filename}: {e}')
        raise e

