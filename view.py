from Capture import normal, mixed, botnet, training, Capture
from IO import Input, Output
from IOview import ModelView
from DomainLevel import DomainLevel
from Comparer import Comparer
import pandas as pd
import matplotlib.pyplot as plt
import altair as alt

if __name__ == "__main__":

    models = [ ModelView.load(DomainLevel.LOWERT), ModelView.load(DomainLevel.LOWER) ]
    dls = DomainLevel.all()
    capture = normal['27']

    comparer = Comparer(capture, models, dls)
    a = comparer.input().drop_duplicates()
    sum = a.sum(numeric_only=True, axis=0)
    a.loc['a'] = sum
    print(sum)
    a.to_csv('/tmp/temp_2.csv')



    domain = comparer.df()

    domain = domain[domain['prediction'] > 0.5]
    domain['distance'] = domain['distance'].rsub(0.5)
    domain.to_csv('/tmp/temp_.csv')
    chart = alt.Chart(domain.drop_duplicates()).mark_point().encode(
        x=alt.X('domain:N', sort=None),
        y='dl:N',
        size='distance:Q',
        color='model:N'
    )

    if False:
        model_lower = domain[domain['model'] == 'model_LOWER']
        model_lowert = domain[domain['model'] == 'model_LOWERT']
        print(model_lower)
        print(model_lowert)
        model_lower_chart = alt.Chart(model_lower).mark_circle(opacity=0.5, color='red').encode(
            x='domain:N',
            y='dl:N',
            size='distance:Q',
        )
        model_lowert_chart = alt.Chart(model_lowert).mark_square(opacity=0.5).encode(
            x='domain:N',
            y='dl:N',
            size='distance:Q',
        )
        chart = model_lower_chart + model_lowert_chart

    chart.save('/tmp/chart.html')

    # print(domain)

    # domain.plot.bar(stacked=False)

    # plt.show()



    # domain = comparer.domain().drop_duplicates()
    # idx = pd.IndexSlice
    # wrong = domain.loc[:, idx[:, :, 'legitness']].isin([0]).any(axis=1)
    # domain[wrong].to_csv('/tmp/temp_.csv')


    pass