import math
import dash
import dash_core_components as dcc
import dash_html_components as html
import dash_table
from dash.dependencies import Input, Output
from plotly.subplots import make_subplots
import dash_bootstrap_components as dbc

import psycopg2
import pandas as pd
import plotly.express as px
import numpy as np
import plotly.graph_objects as go
import os
from sklearn.metrics import classification_report, confusion_matrix
import plotly.figure_factory as ff


db = psycopg2.connect("host=localhost dbname=dns user=postgres password=postgres")



df_pcap = pd.read_sql(
    'SELECT id, "name", "malware_id", "infected", "qr", q, r, "unique", days FROM pcap ORDER BY name',
    db,
)

llrs = { True: [], False:  [] }

window = 1000

for _, pcap in df_pcap.iterrows():

    df_q = pd.read_sql(
        """ SELECT m3.fn, m3.time_, dn.logit
                FROM message3 AS m3 JOIN dn
                    ON m3.dn_id=dn.id
                        WHERE m3.pcap_id=%d
                            AND m3.is_response is True
                                ORDER BY fn""" % pcap["id"], db)

    nn = df_q.logit.to_numpy()

    x = window
    y = nn.shape[0] // window

    nn = nn[0:window*y]

    nn = np.reshape(nn, (y, x))

    llrs[pcap["infected"]] += nn.tolist()

    if _ > 5: break

    #llrs["infected" if pcap["infected"] else "normal"][pcap["name"]] = df_q.logit.to_numpy()

print(len(llrs[True][0]))

print(np.mean(np.array(llrs[True]), axis=1))
