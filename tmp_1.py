from DomainLevel import Transformer
import pandas as pd
from sklearn.model_selection import StratifiedShuffleSplit
import numpy as np

def gen(train, test, X, Y):
    train_X, test_X, train_y, test_y = X[train], X[test], Y[train], Y[test]
    trainv = {
        'X': train_X,
        'Y': train_y,
        'idx': train
    }
    testv = {
        'X': test_X,
        'Y': test_y,
        'idx': test
    }
    return trainv, testv
    

if __name__ == "__main__":

    transformer = Transformer.NOTLD
    translator = transformer.translator()

    dataset_path = 'training/dataset_training.csv'
    df = pd.read_csv(dataset_path, nrows=1_000)
    domains    = df['domain']
    bin_labels = df['legit']
    dga_labels = df['class']
    X = [translator(x) for x in domains]
    Y = [1 if b == 'dga' else 0 for b in bin_labels]
    X = np.array(X)
    Y = np.array(Y)

    sss = StratifiedShuffleSplit(n_splits=3, test_size=0.2, random_state=0)
    for train_idxs, test_idxs in sss.split(X, Y):
        a = pd.Series(df['class'].values[train_idxs]).value_counts(normalize=True).to_dict()
        print(a)



