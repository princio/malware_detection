import csv

class Dataset:
    def __init__(self):
        self.id = None
        self.hash = None
        self.name = None
        self.date = None
        self.type = None
        self.inputs_number = None
        self.inputs_numbers = None
        self.labels = None

    @staticmethod
    def fetch(connection, id):
        cursor = connection.cursor()
        cursor.execute("""SELECT id, hash, name, type, inputs_number, date, inputs_numbers, labels
	                        FROM public.datasets WHERE id=%s;""", (id, ))
                            
        fetched = list(cursor.fetchone())
        dataset = Dataset()
        dataset.id = fetched.pop(0)
        dataset.hash = fetched.pop(0)
        dataset.name = fetched.pop(0)
        dataset.type = fetched.pop(0)
        dataset.inputs_number = fetched.pop(0)
        dataset.date = fetched.pop(0)
        dataset.inputs_numbers = fetched.pop(0)
        dataset.labels = fetched.pop(0)

        return dataset

    def save(self, connection):
        cursor = connection.cursor()
        cursor.execute("""INSERT INTO public.datasets
                        (hash, name, type, inputs_number, date, inputs_numbers, labels)
                        VALUES (%s, %s, %s, %s, %s, %s, %s);""",
        (self.hash, self.name, self.type, self.inputs_number, self.date, self.inputs_numbers, self.labels))
        connection.commit()

    def data(self):
        data = []
        with open(f"datasets/{self.type}_h_t/{self.name}", "r") as f:
            reader = csv.reader(f)
            for row in reader:
                data.append(row)
        return data


    def __str__(self):
        return "%s/%s" % (self.type, self.name)