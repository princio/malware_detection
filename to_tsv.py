
import os, json
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' 
from Model import Model
from Repository import ModelRepository
import psycopg2
from collections import OrderedDict

connection = psycopg2.connect(user = "postgres",
                                  password = "porcodio",
                                  host = "127.0.0.1",
                                  port = "5432",
                                  database = "malware")

with open('models/alphabet.json', 'r') as fp:
    vocab = list(json.load(fp).keys())
print(vocab, len(vocab))

model = ModelRepository.fetch(connection, '1a8afe9d-974e-4bf0-bc0c-1c1209e7e1c5')

model.load_model()

weights = model.nn.get_layer(index=0).get_weights()[0]
print(weights.shape) 

out_v = open('vecs.tsv', 'w', encoding='utf-8')
out_m = open('meta.tsv', 'w', encoding='utf-8')

for num, word in enumerate(vocab):
    if num == 0: continue # skip padding token from vocab
    vec = weights[num]
    out_m.write(word + "\n")
    out_v.write('\t'.join([str(x) for x in vec]) + "\n")
out_v.close()
out_m.close()
