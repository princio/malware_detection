
import numpy as np
import csv
import tldextract

def inspect(csv_path):
    with open(csv_path, 'r') as f:
        reader = csv.reader(f)
        data = [[row[0], row[1], float(row[2])] for row in reader]

    domains = {}
    gen = (d for d in data if d[2] >= 0.5)
    for d in gen:
        dd = d[0].split('.')
        print(dd)
        dd = f"{dd[-2]}.{dd[-1]}"
        if dd not in domains:
            domains[dd] = [dd, 0, 1]
        else:
            domains[dd][1] += float(d[2])
            domains[dd][2] += 1

    with open(csv_path[:-4] + '.domains2.csv', 'w', newline='\n') as f:
        writer = csv.writer(f)
        writer.writerows([[domains[d][0], domains[d][1]/domains[d][2], domains[d][2]] for d in domains])

    return domains

def inspect_labelled(csv_path):
    with open(csv_path, 'r') as f:
        reader = csv.reader(f)
        data = [row for row in reader]

    domains = {
        'legit': {},
        'dga': {}
    }

    for d in data:
        extracted = tldextract.extract(d[3])
        dd = extracted.domain + extracted.suffix.replace('.', '')
        if dd not in domains:
            domains[d[0]][dd] = [ dd, 1 ]
        else:
            domains[d[0]][dd][1] += 1

    for l_or_d in ['legit', 'dga']:
        with open(csv_path[:-4] + f'.{l_or_d}.csv', 'w', newline='\n') as f:
            writer = csv.writer(f)
            writer.writerows([[domains[l_or_d][d][0], domains[l_or_d][d][1]] for d in domains[l_or_d]])

    return domains

def training_dataset(csv_path):
    with open(csv_path, 'r') as f:
        reader = csv.reader(f)
        data = [row for row in reader]

    domains = []

    for d in data:
        extracted = tldextract.extract(d[3])
        dd = extracted.domain + extracted.suffix.replace('.', '')
        domains.append([d[0], d[1], d[3], d[2], dd])

    with open(csv_path[:-4] + f'.2.csv', 'w', newline='\n') as f:
        writer = csv.writer(f)
        writer.writerows(domains)

    return domains

if __name__ == "__main__":
    training_dataset(f'datasets/setAtrain_h_t_domins.csv')
    pass
