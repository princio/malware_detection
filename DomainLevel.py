from enum import Enum
import tldextract

class DomainLevel(Enum):
    NORMAL = 0
    SUB_TLD = 1
    DOM_TLD = 2
    SUB_DOM = 3
    DOM_SUB = 4
    SUB = 5
    DOM = 6

    def translate(self, domain):
        if self == DomainLevel.NORMAL:
            return domain.lower().replace('.', '').replace('www.', '')
        exd = tldextract.extract(domain.lower())
        sub = exd.subdomain.replace('.', '')
        dom = exd.domain.replace('.', '')
        tld = exd.suffix.replace('.', '')
        if self == DomainLevel.SUB_TLD:
            return sub + tld
        if self == DomainLevel.DOM_TLD:
            return dom + tld
        if self == DomainLevel.SUB_DOM:
            return sub + dom
        if self == DomainLevel.DOM_SUB:
            return dom + sub
        if self == DomainLevel.DOM:
            return dom
        if self == DomainLevel.SUB:
            return sub

    @staticmethod
    def parse(s):
        s = s.lower()
        if s == DomainLevel.NORMAL.name.lower():  return DomainLevel.NORMAL
        if s == DomainLevel.SUB_TLD.name.lower(): return DomainLevel.SUB_TLD
        if s == DomainLevel.DOM_TLD.name.lower(): return DomainLevel.DOM_TLD
        if s == DomainLevel.SUB_DOM.name.lower(): return DomainLevel.SUB_DOM
        if s == DomainLevel.DOM_SUB.name.lower(): return DomainLevel.DOM_SUB
        if s == DomainLevel.DOM.name.lower(): return DomainLevel.DOM
        if s == DomainLevel.SUB.name.lower(): return DomainLevel.SUB
        raise 'Undefined domain level'

    @staticmethod
    def all():
        return [
            DomainLevel.NORMAL, DomainLevel.SUB_TLD, DomainLevel.DOM_TLD, DomainLevel.SUB_DOM,
            DomainLevel.DOM_SUB, DomainLevel.DOM, DomainLevel.SUB
        ]