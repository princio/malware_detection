from enum import Enum
import tldextract


extractor = tldextract.TLDExtract(extra_suffixes=['bit'])

class DomainLevel(Enum):
    LOWERT = 0
    BOTHT = 1
    DOMAINT = 2
    LOWER = 3
    BOTH = 4
    DOMAIN = 5

    def translate(self, domain):
        domain = domain.lower().replace('www.', '')

        exd = extractor(domain)
        sub = exd.subdomain.replace('.', '')
        dom = exd.domain.replace('.', '')
        tld = exd.suffix.replace('.', '')

        if self == DomainLevel.LOWER:
            input = (sub if len(sub) > 0 else dom)
        elif self == DomainLevel.BOTH:
            input = sub + dom
        elif self == DomainLevel.DOMAIN:
            input = dom
        elif self == DomainLevel.LOWERT:
            input = (sub if len(sub) > 0 else dom) + tld
        elif self == DomainLevel.BOTHT:
            input = sub + dom + tld
        elif self == DomainLevel.DOMAINT:
            input = dom + tld

        return input

    @staticmethod
    def parse(s):
        s = s.lower()
        if s == DomainLevel.LOWER.name.lower():  return DomainLevel.LOWER
        if s == DomainLevel.BOTH.name.lower(): return DomainLevel.BOTH
        if s == DomainLevel.DOMAIN.name.lower(): return DomainLevel.DOMAIN
        raise 'Undefined domain level'

    @staticmethod
    def all():
        return [
            DomainLevel.LOWERT,  DomainLevel.LOWER,
            DomainLevel.BOTHT,   DomainLevel.BOTH,
            DomainLevel.DOMAINT, DomainLevel.DOMAIN
        ]